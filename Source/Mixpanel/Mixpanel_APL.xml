<?xml version="1.0" encoding="utf-8"?>

<root xmlns:android="http://schemas.android.com/apk/res/android">
	<!-- init section is always evaluated once per architecture -->
	<init>
		<log text="Mixpanel init"/>
		<setStringFromProperty result="sMixpanelToken" ini="Engine" section="/Script/Mixpanel.MixpanelSettings" property="MixpanelTokenAndroid" default=""/>
	</init>

	<!-- optional updates applied to AndroidManifest.xml -->
	<androidManifestUpdates>
		<addPermission android:name="android.permission.INTERNET" />
		<addPermission android:name="android.permission.ACCESS_NETWORK_STATE" />
		<addPermission android:name="android.permission.BLUETOOTH" />
	</androidManifestUpdates> 

	<!-- optional additions to proguard -->
	<proguardAdditions>
		<insert>
-dontwarn com.mixpanel.** 
		</insert>
	</proguardAdditions>

	<prebuildCopies>
		<copyDir src="$S(EngineDir)/Plugins/GSG/Mixpanel/lib/Android/" dst="$S(BuildDir)" />
	</prebuildCopies>
	
	<!-- optional files or directories to copy to Intermediate/Android/APK -->
 	<resourceCopies>

	</resourceCopies>

	<!-- optional additions to the GameActivity imports in GameActivity.java -->
	<gameActivityImportAdditions>
		<insert>
import org.json.JSONException;
import org.json.JSONObject;

import com.mixpanel.android.mpmetrics.MixpanelAPI; 
		</insert>
	</gameActivityImportAdditions>
	

	<!-- optional additions to the GameActivity class in GameActivity.java -->
	<gameActivityClassAdditions>
		<insert>
String mixpanelToken = "</insert><insertValue value="$S(sMixpanelToken)" /><insert>";

MixpanelAPI mMixpanel = MixpanelAPI.getInstance(this.getApplicationContext(), mixpanelToken);

void AndroidThunkJava_MixpanelTrack(String eventName, String[] keys, String[] values)
{
	try {
        JSONObject props = new JSONObject();

		for (int i = 0; i &lt; keys.length; i++)
		{
			props.put(keys[i], values[i]);
    	}

        mMixpanel.track("MainActivity - onCreate called", props);
    } catch (JSONException e) {
        //Log.e("MYAPP", "Unable to add properties to JSONObject", e);
    }
}

void AndroidThunkJava_MixpanelTimedTrack(String eventName)
{

}

void AndroidThunkJava_MixpanelIdentify(String distinctID)
{
	mMixpanel.identify(distinctID);
}

void AndroidThunkJava_MixpanelRegisterSuperProperties(String[] keys, String[] values)
{
	try {
		JSONObject props = new JSONObject();
		
		for (int i = 0; i &lt; keys.length; i++)
		{
			props.put(keys[i], values[i]);
		}

		mMixpanel.registerSuperProperties(props);
	 } catch (JSONException e) {

	 }
}

void AndroidThunkJava_MixpanelTrackCharge(Float charge, String[] keys, String[] values)
{
	try {
		JSONObject props = new JSONObject();

		for (int i = 0; i &lt; keys.length; i++)
		{
			props.put(keys[i], values[i]);
		}

		//properties.put("$time", "2012-01-02T00:00:00");
		mMixpanel.getPeople().trackCharge(charge, props);
	 } catch (JSONException e) {

	 }
}


		</insert>
	</gameActivityClassAdditions>
	
	<!-- optional additions to GameActivity onCreate metadata reading in GameActivity.java -->
	<gameActivityReadMetadataAdditions>

	</gameActivityReadMetadataAdditions>
	
	<!-- optional additions to GameActivity onCreate in GameActivity.java -->
	<gameActivityOnCreateAdditions>
		<insert>
	
		</insert>
	</gameActivityOnCreateAdditions>

	<!-- optional additions to GameActivity onDestroy in GameActivity.java -->
	<gameActivityOnDestroyAdditions>
		<insert>
mMixpanel.flush();
		</insert>
	</gameActivityOnDestroyAdditions>
	
	
	<!-- optional additions to GameActivity onStart in GameActivity.java -->
	<gameActivityOnStartAdditions>
		<insert>
		
		</insert>
	</gameActivityOnStartAdditions>

	<!-- optional additions to GameActivity onStop in GameActivity.java -->
	<gameActivityOnStopAdditions>
		<insert>

		</insert>
	</gameActivityOnStopAdditions>
	

	<!-- optional additions to GameActivity onPause in GameActivity.java	-->
	<gameActivityOnPauseAdditions>
		<insert>

		</insert>
	</gameActivityOnPauseAdditions>


	<!-- optional additions to GameActivity onResume in GameActivity.java	-->
	<gameActivityOnResumeAdditions>
		<insert>

		</insert>
	</gameActivityOnResumeAdditions>


	<!-- optional additions to GameActivity onActivityResult in GameActivity.java -->
	<gameActivityOnActivityResultAdditions>
		<insert>

		</insert>
	</gameActivityOnActivityResultAdditions>
	
	<!-- optional libraries to load in GameActivity.java before libUE4.so -->
	<soLoadLibrary>

	</soLoadLibrary>
</root>
